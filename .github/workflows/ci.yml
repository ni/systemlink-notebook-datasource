name: CI

on:
  push:
    branches:
      - main
      - users/cwaterma/artifactory
  pull_request:
    branches:
      - main
      - users/cwaterma/artifactory
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Setup Node.js environment
        uses: actions/setup-node@v2.1.2
        with:
          node-version: "16.x"

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Cache yarn cache
        uses: actions/cache@v2
        id: cache-yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Cache node_modules
        id: cache-node-modules
        uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ runner.os }}-${{ matrix.node-version }}-nodemodules-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.node-version }}-nodemodules-

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: (Release) Update plugin version
#         if: github.event_name == 'push'
        run: node update-versions.js

      - name: Build and test frontend
        run: yarn build

      - name: Check for backend
        id: check-for-backend
        run: |
          if [ -f "Magefile.go" ]
          then
            echo "::set-output name=has-backend::true"
          fi

      - name: Setup Go environment
        if: steps.check-for-backend.outputs.has-backend == 'true'
        uses: actions/setup-go@v2
        with:
          go-version: "1.15"

      - name: Test backend
        if: steps.check-for-backend.outputs.has-backend == 'true'
        uses: magefile/mage-action@v1
        with:
          version: latest
          args: coverage

      - name: Build backend
        if: steps.check-for-backend.outputs.has-backend == 'true'
        uses: magefile/mage-action@v1
        with:
          version: latest
          args: buildAll

      - name: (Release) Package plugin
#         if: github.event_name == 'push'
        run: |
          mv dist ni-slnotebook-datasource
          zip systemlink-notebook-datasource.zip ni-slnotebook-datasource -r

#       - name: (Release) Setup JFrog CLI
#         if: github.event_name == 'push'
#         uses: jfrog/setup-jfrog-cli@v2
#         with:
#           # JFrog CLI Version
#           version: # optional, default is 2.14.0
#           # Remote repository in Artifactory pointing to 'https://releases.jfrog.io/artifactory/jfrog-cli'. Use this parameter in case you don't have an Internet access.
#           download-repository: # optional

      - name: (Release) Publish to Artifactory
#         if: github.event_name == 'push'
        run:
          curl -H "Authorization:Bearer ${{ secrets.NIARTIFACTS_TOKEN }}" -T systemlink-notebook-datasource.zip "https://niartifacts.jfrog.io/artifactory/rnd-generic-ci/ni/systemlink/systemlink-notebook-datasource/latest.zip"
#           jf rt u systemlink-notebook-datasource.zip https://niartifacts.jfrog.io/ui/repos/tree/General/rnd-generic-adhoc/ni/systemlink/systemlink-notebook-datasource.zip
#           curl -H "X-JFrog-Art-Api:${{ secrets.NIARTIFACTS_TOKEN }}" -T systemlink-notebook-datasource.zip "https://niartifacts.jfrog.io/rnd-generic-ci/ni/systemlink/latest.zip"

#       - name: (Release) Run semantic-release
#         if: github.event_name == 'push'
#         env:
#           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#         run: npx semantic-release
