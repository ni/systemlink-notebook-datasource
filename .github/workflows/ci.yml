name: CI

on:
  push:
    branches:
      - main
      - prototype
  pull_request:
    branches:
      - main
      - prototype

jobs:
  build:
    runs-on: ubuntu-latest
    environment: jfrog-ci
    steps:
      - uses: actions/checkout@v3
      - name: Setup Node.js environment
        uses: actions/setup-node@v3
        with:
          node-version: '16.x'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Check types
        run: npm run typecheck
      - name: Lint
        run: npm run lint
      - name: Unit tests
        run: npm run test:ci

      - name: (Release) Update plugin version
        if: github.event_name == 'push'
        run: |
          node update-versions.js
          echo 'PLUGIN_VERSION=$(node -pe "JSON.parse(process.argv[1]).version" "$(cat package.json)")' >> $GITHUB_ENV

      - name: Build frontend
        run: npm run build

      - name: Start grafana docker
        run: docker-compose up -d

      - name: Run e2e tests
        run: npm run e2e

      - name: Stop grafana docker
        run: docker-compose down

      - name: (Release) Package plugin
        if: github.event_name == 'push'
        run: |
          mv dist ni-slnotebook-datasource
          zip systemlink-notebook-datasource.zip ni-slnotebook-datasource -r

      - name: (Release) Publish to Artifactory
        if: github.event_name == 'push'
        run: |
          curl -f -H "Authorization:Bearer ${{ secrets.JFROG_ACCESS_TOKEN }}" -T systemlink-notebook-datasource.zip "https://niartifacts.jfrog.io/artifactory/rnd-generic-ci/ni/systemlink/systemlink-notebook-datasource/latest.zip"
          curl -f -H "Authorization:Bearer ${{ secrets.JFROG_ACCESS_TOKEN }}" -T systemlink-notebook-datasource.zip "https://niartifacts.jfrog.io/artifactory/rnd-generic-ci/ni/systemlink/systemlink-notebook-datasource/${{ env.PLUGIN_VERSION }}.zip"

      - name: (Release) Run semantic-release
        if: github.event_name == 'push'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npx semantic-release